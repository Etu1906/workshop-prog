const quizData = {
  quizTitle: "Les conditions ðŸš¦",
  questions: [
    {
      question: 'Traduit : Quel est le signe pour dire "supÃ©rieur ou Ã©gal" ?',
      options: [">", "<", ">=", "=<", "<="],
      correctAnswers: [">="],
      successMessage:
        'Bravo ! C\'est bien ">=" qui signifie "supÃ©rieur ou Ã©gal".',
      failureMessage: 'C\'est ">=" qui signifie "supÃ©rieur ou Ã©gal".',
    },
    {
      question: 'Le terme "or" signifie :',
      options: [
        "Une des 2 conditions doit Ãªtre vraie",
        "Les 2 conditions doivent Ãªtre vraies",
        "La condition de droite doit Ãªtre vraie",
        "Aucune des rÃ©ponses",
        "Question piÃ¨ge",
      ],
      correctAnswers: ["Une des 2 conditions doit Ãªtre vraie"],
      successMessage:
        'Exactement ! "or" signifie "ou", donc une des 2 conditions doit Ãªtre vraie.',
      failureMessage:
        'Ce n\'est pas une question piÃ¨ge, "or" signifie "ou", donc une des 2 conditions doit Ãªtre vraie.',
    },
    {
      question: "Comment faire une comparaison de 2 valeurs ?",
      options: ["=", "==", "==="],
      correctAnswers: ["=="],
      successMessage:
        'Exactement ! "=" est utilisÃ© pour l\'affectation de valeur, "==" pour la comparaison.',
      failureMessage:
        '"=" est utilisÃ© pour l\'affectation de valeur, "==" pour la comparaison.',
    },
    {
      question:
        "La syntaxe est-elle correcte ? `a = 5; if ((a <= 10) == True)`",
      options: ["Oui", "Non"],
      correctAnswers: ["Oui"],
      successMessage:
        'Excellent ! "(a <= 10)" est une comparaison qui retourne un boolÃ©en, donc la comparaison est valide.',
      failureMessage:
        '"(a <= 10)" est une comparaison qui retourne un boolÃ©en, donc la comparaison est valide.',
    },
    {
      question: "Comment savoir oÃ¹ se termine la portÃ©e du if en Python ?",
      options: [
        "Les espaces",
        "Les indentations",
        'Mettre un "endif" pour montrer que le if se termine',
        "Ce n'est pas possible",
      ],
      correctAnswers: ["Les indentations"],
      successMessage:
        "TrÃ¨s bien ! L'indentation est le dÃ©calage horizontal du code pour reflÃ©ter sa structure hiÃ©rarchique.",
      failureMessage:
        "En Python, l'indentation est trÃ¨s importante. Python se base sur l'indentation pour connaÃ®tre la portÃ©e des if, mais aussi des boucles (Ã  venir).",
    },
    {
      question:
        "`variable: int = 4;`  \
    `(variable > 3 and variable < 5)`",
      options: ["Vrai", "Faux"],
      correctAnswers: ["Vrai"],
      successMessage:
        "Bravo ! Note qu'on peut Ã©crire cette condition sous la forme `if 3 < variable < 5`, ce qui est spÃ©cifique Ã  Python. Cette syntaxe est exclusive Ã  ce langage !",
      failureMessage:
        "Cette condition se traduit par `if 3 < variable < 5` oÃ¹ `variable = 4`. Cette syntaxe est possible, mais uniquement en Python.",
    },
    {
      question:
        "`variable: int = 4;`  \
    `(variable == 3 or variable != 5)`",
      options: ["Vrai", "Faux"],
      correctAnswers: ["Vrai"],
      successMessage:
        "Et oui ! `4` est bien diffÃ©rent de `5`, mÃªme s'il n'est pas Ã©gal Ã  `3`.",
      failureMessage:
        "`4` est bien diffÃ©rent de `5`, mÃªme s'il n'est pas Ã©gal Ã  `3`.",
    },
    {
      question: "Quel est le type de `variable = (2 != 5 and 5 == 5)` ?",
      options: ["int", "bool", "boll", "boool"],
      correctAnswers: ["bool"],
      successMessage:
        "Et oui ! Le type est bien `bool`, qui correspond Ã  un boolÃ©en, prenant soit `True` soit `False`.",
      failureMessage:
        "Le type est `bool`, qui correspond Ã  un boolÃ©en, prenant soit `True` soit `False`.",
    },
  ],
};
